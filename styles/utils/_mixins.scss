@use './variables' as *;

@mixin container {
  padding: $space-2xl-3xl $space-l-xl;
}

@mixin outer-container {
  max-width: 160rem;
  width: 100%;
  height: 100%;
  margin-inline: auto;
  padding: $padding-lrg;
  overflow: hidden;
  min-height: calc(100vh - 10rem);
}

@mixin devices($breakpoint) {
  @if $breakpoint == tablet {
    @media only screen and (max-width: 768px) {
      @content;
    }
  }

  @if $breakpoint == mobile {
    @media only screen and (max-width: 375px) {
      @content;
    }
  }
}

@mixin outline-font($color) {
  -webkit-text-stroke-width: thin;
  -webkit-text-fill-color: transparent;
  color: $color;
  @content;
}

@mixin fluid-font($min-font-size, $mid-font-size, $max-font-size) {
  font-size: $min-font-size;

  @media screen and (min-width: 400px) {
    font-size: $mid-font-size;
  }
  @media screen and (min-width: 1440px) {
    font-size: $max-font-size;
  }
}

@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (max-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-y {
  display: flex;
  align-items: center;
}

@mixin flex-center-x {
  display: flex;
  justify-content: center;
}

@mixin even-cols {
  display: flex;
  width: 100%;
  > * {
    flex-basis: 100%;
  }
  @content;
}

@mixin flex-wrap {
  display: flex;
  width: 99%;
  flex-wrap: wrap;
  @content;
}
